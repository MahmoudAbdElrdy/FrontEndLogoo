{"version":3,"file":"ngx-cache-core.js.map","sources":["ng://@ngx-cache/core/src/cache.loader.ts","ng://@ngx-cache/core/src/models/return-type.ts","ng://@ngx-cache/core/src/cache.service.ts","ng://@ngx-cache/core/src/cache.ts","ng://@ngx-cache/core/src/util.ts","ng://@ngx-cache/core/src/cached.decorator.ts","ng://@ngx-cache/core/src/storage.ts","ng://@ngx-cache/core/index.ts"],"sourcesContent":["import { CacheSettings } from './models/cache-settings';\r\nimport { LifeSpan } from './models/life-span';\r\n\r\nexport abstract class CacheLoader {\r\n  abstract get key(): string;\r\n\r\n  abstract get lifeSpan(): LifeSpan;\r\n}\r\n\r\nexport class CacheStaticLoader implements CacheLoader {\r\n  get key(): string {\r\n    return this.providedSettings.key;\r\n  }\r\n\r\n  get lifeSpan(): LifeSpan {\r\n    return this.providedSettings.lifeSpan;\r\n  }\r\n\r\n  constructor(\r\n    private readonly providedSettings: CacheSettings = {\r\n      key: 'NGX_CACHE',\r\n      lifeSpan: {\r\n        expiry: Number.MAX_VALUE,\r\n        TTL: Number.MAX_VALUE\r\n      }\r\n    }\r\n  ) {}\r\n}\r\n","export enum ReturnType {\r\n  /**\r\n   * scalar\r\n   */\r\n  Scalar = 0,\r\n  /**\r\n   * observable\r\n   */\r\n  Observable = 10,\r\n  /**\r\n   * promise\r\n   */\r\n  Promise = 20\r\n}\r\n","import { Inject, Injectable, InjectionToken, Injector, PLATFORM_ID } from '@angular/core';\r\n\r\nimport { Cache } from './cache';\r\nimport { CacheLoader } from './cache.loader';\r\nimport { CacheValue } from './models/cache-value';\r\nimport { LifeSpan } from './models/life-span';\r\nimport { ReturnType } from './models/return-type';\r\n\r\nexport const CACHE = new InjectionToken<Cache>('CACHE');\r\n\r\n@Injectable()\r\nexport class CacheService {\r\n  private static instance: CacheService = undefined;\r\n\r\n  protected readonly cache: Cache;\r\n  protected readonly lifeSpan: LifeSpan;\r\n\r\n  static getInstance(loader?: CacheLoader, platformId?: any, injector?: Injector): CacheService {\r\n    return CacheService.instance;\r\n  }\r\n\r\n  static normalizeKey(key: string | number): string {\r\n    if (CacheService.validateKey(key)) {\r\n      throw new Error('Please provide a valid key to save in the CacheService');\r\n    }\r\n\r\n    return `${key}`;\r\n  }\r\n\r\n  private static validateKey(key: string | number): boolean {\r\n    return !key || typeof key === 'boolean' || Number.isNaN(key as number);\r\n  }\r\n\r\n  private static validateValue(value: CacheValue): boolean {\r\n    return value.lifeSpan.expiry && value.lifeSpan.expiry > Date.now();\r\n  }\r\n\r\n  constructor(readonly loader: CacheLoader, @Inject(PLATFORM_ID) private readonly platformId: any, private readonly injector: Injector) {\r\n    CacheService.instance = this;\r\n\r\n    this.cache = this.injector.get(CACHE);\r\n    this.lifeSpan = loader.lifeSpan;\r\n  }\r\n\r\n  get key(): string {\r\n    return this.loader.key;\r\n  }\r\n\r\n  has(key: string | number): boolean {\r\n    const normalized = CacheService.normalizeKey(key);\r\n\r\n    return this.cache.keys.indexOf(normalized) !== -1;\r\n  }\r\n\r\n  set(key: string | number, value: any, returnType: ReturnType = ReturnType.Scalar, lifeSpan?: LifeSpan): boolean {\r\n    const normalized = CacheService.normalizeKey(key);\r\n\r\n    return this.cache.setItem(normalized, {\r\n      data: value,\r\n      returnType,\r\n      lifeSpan: this.parseLifeSpan(lifeSpan ? lifeSpan : this.lifeSpan)\r\n    });\r\n  }\r\n\r\n  get(key: string | number): any {\r\n    const normalized = CacheService.normalizeKey(key);\r\n    const cached = this.cache.getItem(normalized);\r\n\r\n    if (cached) {\r\n      if (CacheService.validateValue(cached)) {\r\n        return cached.data;\r\n      } else {\r\n        this.remove(normalized);\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  getWithMetadata(key: string | number): CacheValue | undefined {\r\n    const normalized = CacheService.normalizeKey(key);\r\n    const cached = this.cache.getItem(normalized);\r\n\r\n    if (cached) {\r\n      if (CacheService.validateValue(cached)) {\r\n        return cached;\r\n      } else {\r\n        this.remove(key);\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  remove(key: string | number, wild = false): void {\r\n    const normalized = CacheService.normalizeKey(key);\r\n\r\n    this.cache.removeItem(normalized, wild);\r\n  }\r\n\r\n  clear(): void {\r\n    this.cache.clear();\r\n  }\r\n\r\n  dehydrate(): any {\r\n    const keys = this.cache.keys.length ? this.cache.keys : [];\r\n    const res = {};\r\n\r\n    keys.forEach((key: string) => {\r\n      res[key] = this.cache.getItem(key);\r\n    });\r\n\r\n    return res;\r\n  }\r\n\r\n  rehydrate(json: any): void {\r\n    Object.keys(json).forEach((key: string) => {\r\n      const normalized = CacheService.normalizeKey(key);\r\n      this.cache.setItem(normalized, json[normalized]);\r\n    });\r\n  }\r\n\r\n  private parseLifeSpan(lifeSpan: LifeSpan): LifeSpan {\r\n    return {\r\n      expiry: lifeSpan.expiry || (lifeSpan.TTL ? Date.now() + lifeSpan.TTL * 1000 : this.lifeSpan.expiry),\r\n      TTL: lifeSpan.TTL || this.lifeSpan.TTL\r\n    };\r\n  }\r\n}\r\n","import { CacheValue } from './models/cache-value';\r\n\r\nexport abstract class Cache {\r\n  abstract get keys(): Array<string> | undefined;\r\n\r\n  abstract getItem(key: string): CacheValue | undefined;\r\n\r\n  abstract setItem(key: string, value: CacheValue): boolean;\r\n\r\n  abstract removeItem(key: string, wild: boolean): void;\r\n\r\n  abstract clear(): void;\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nexport const isPromise = (obj: any): obj is Promise<any> => !!obj && typeof obj.then === 'function';\r\n\r\nexport const isObservable = (obj: any | Observable<any>): obj is Observable<any> => !!obj && typeof obj.subscribe === 'function';\r\n","import { Observable, of as observableOf } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { CacheService } from './cache.service';\r\nimport { ReturnType } from './models/return-type';\r\nimport { isObservable, isPromise } from './util';\r\n\r\n// tslint:disable-next-line\r\nexport function CacheKey(target: any, propertyKey: string, index: number): void {\r\n  const metadataKey = `__cache_${propertyKey}_keys`;\r\n\r\n  Array.isArray(target[metadataKey]) ? target[metadataKey].push(index) : (target[metadataKey] = [index]);\r\n}\r\n\r\n// tslint:disable-next-line\r\nexport function Cached(key: string): any | Observable<any> | Promise<any> {\r\n  // tslint:disable-next-line\r\n  return function(target: Function, propertyKey: string, descriptor: TypedPropertyDescriptor<any>): any | Observable<any> | Promise<any> {\r\n    const method: Function = descriptor.value;\r\n    descriptor.value = function(...args: Array<any>): any | Observable<any> | Promise<any> {\r\n      const cache = CacheService.getInstance();\r\n\r\n      const metadataKey = `__cache_${propertyKey}_keys`;\r\n      const indices = target[metadataKey];\r\n\r\n      let keyParts = '';\r\n\r\n      if (Array.isArray(indices)) {\r\n        for (let i = 0; i < args.length; i++) {\r\n          if (indices.indexOf(i) !== -1) {\r\n            keyParts = !keyParts ? String(args[i]) : `${keyParts}_${String(args[i])}`;\r\n          }\r\n        }\r\n      }\r\n\r\n      let cacheKey = !keyParts ? key : `${key}_${keyParts}`;\r\n\r\n      cacheKey = CacheService.normalizeKey(cacheKey);\r\n\r\n      // tslint:disable-next-line\r\n      if (!cache || !cacheKey) {\r\n        // tslint:disable-next-line\r\n        return method.apply(this, args);\r\n      }\r\n\r\n      if (cache.has(cacheKey)) {\r\n        const cached = cache.getWithMetadata(cacheKey);\r\n\r\n        if (cached && cached.data) {\r\n          switch (cached.returnType) {\r\n            case ReturnType.Observable:\r\n              return observableOf(cached.data);\r\n            case ReturnType.Promise:\r\n              return Promise.resolve(cached.data);\r\n            default:\r\n              return cached.data;\r\n          }\r\n        }\r\n      }\r\n\r\n      // tslint:disable-next-line\r\n      const value = method.apply(this, args);\r\n\r\n      if (isObservable(value)) {\r\n        return value.pipe(\r\n          map((res: any) => {\r\n            cache.set(cacheKey, res, ReturnType.Observable);\r\n\r\n            return res;\r\n          })\r\n        );\r\n      } else if (isPromise(value)) {\r\n        return (value).then((res: any) => {\r\n          cache.set(cacheKey, res, ReturnType.Promise);\r\n\r\n          return res;\r\n        });\r\n      }\r\n\r\n      cache.set(cacheKey, value);\r\n\r\n      return value;\r\n    };\r\n\r\n    return descriptor;\r\n  };\r\n}\r\n","import { EventEmitter } from 'events';\r\n\r\nexport abstract class Storage extends EventEmitter {\r\n  abstract length: number;\r\n  abstract keys: Array<string>;\r\n\r\n  abstract setItem(key: string, value: any): boolean;\r\n\r\n  abstract getItem(key: string): any;\r\n\r\n  abstract removeItem(key: string): boolean;\r\n\r\n  abstract key(index: number): string;\r\n\r\n  abstract clear(): boolean;\r\n}\r\n","import { InjectionToken, Injector, ModuleWithProviders, NgModule, Optional, PLATFORM_ID, SkipSelf } from '@angular/core';\r\n\r\nimport { CacheLoader, CacheStaticLoader } from './src/cache.loader';\r\nimport { CacheService } from './src/cache.service';\r\nimport { Storage } from './src/storage';\r\n\r\nexport * from './src/models/cache-settings';\r\nexport * from './src/models/cache-value';\r\nexport * from './src/models/life-span';\r\nexport * from './src/cache';\r\nexport * from './src/cache.loader';\r\nexport * from './src/cache.service';\r\nexport * from './src/cached.decorator';\r\nexport * from './src/storage';\r\n\r\nexport const STORAGE = new InjectionToken<Storage>('STORAGE');\r\n\r\n// for AoT compilation\r\n// tslint:disable-next-line\r\nexport function cacheFactory(): CacheLoader {\r\n  return new CacheStaticLoader();\r\n}\r\n\r\n// tslint:disable-next-line\r\nexport function cacheServiceFactory(loader: CacheLoader, platformId: any, injector: Injector): CacheService {\r\n  return new CacheService(loader, platformId, injector);\r\n}\r\n\r\n@NgModule()\r\nexport class CacheModule {\r\n  static forRoot(\r\n    configuredProvider: any = {\r\n      provide: CacheLoader,\r\n      useFactory: cacheFactory\r\n    }\r\n  ): ModuleWithProviders {\r\n    return {\r\n      ngModule: CacheModule,\r\n      providers: [\r\n        configuredProvider,\r\n        {\r\n          provide: CacheService,\r\n          useFactory: cacheServiceFactory,\r\n          deps: [CacheLoader, PLATFORM_ID, Injector]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  constructor(@Optional() @SkipSelf() parentModule?: CacheModule) {\r\n    if (parentModule) {\r\n      throw new Error('CacheModule already loaded; import in root module only.');\r\n    }\r\n  }\r\n}\r\n"],"names":["observableOf"],"mappings":"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"}
