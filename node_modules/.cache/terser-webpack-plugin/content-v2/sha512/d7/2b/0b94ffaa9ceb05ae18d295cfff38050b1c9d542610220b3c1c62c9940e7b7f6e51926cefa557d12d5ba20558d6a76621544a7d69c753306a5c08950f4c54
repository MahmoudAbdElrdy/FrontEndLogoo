{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{\"05zC\":function(t,e,n){\"use strict\";n.r(e);var a=n(\"CcnG\"),r=n(\"Ip0R\"),l=n(\"kWnn\"),o=function(t,e,n,a){var r,l=arguments.length,o=l<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(o=(l<3?r(o):l>3?r(e,n,o):r(e,n))||o);return l>3&&o&&Object.defineProperty(e,n,o),o},c=function(t,e){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(t,e)},m=function(){function t(t){this.service=t,this.displayedTransactionColumns=[\"transid\",\"date\",\"account\",\"type\",\"amount\",\"debit\",\"balance\"],this.displayedTransferColumns=[\"transid\",\"date\",\"account\",\"type\",\"amount\",\"balance\",\"status\"],this.displayedExpenseColumns=[\"itmNo\",\"date\",\"type\",\"companyName\",\"amount\",\"status\"]}return t.prototype.ngOnInit=function(){var t=this;this.service.getTableTabContent().valueChanges().subscribe(function(e){return t.tableTabData=e}),this.service.getBuySellChartContent().valueChanges().subscribe(function(e){return t.getChartData(e)})},t.prototype.getChartData=function(t){this.buySellChartContent=t,this.chartDataChange(\"week\")},t.prototype.chartDataChange=function(t){if(this.buySellChartContent&&this.buySellChartContent.length>0)for(var e=0,n=this.buySellChartContent;e<n.length;e++){var a=n[e];a.tag==t&&(this.chartData=a)}},t.ctorParameters=function(){return[{type:l.a}]},t=o([Object(a.n)({selector:\"app-reports\",template:n(\"gkGW\"),styles:[n(\"MzfE\")]}),c(\"design:paramtypes\",[l.a])],t)}(),s=[{path:\"\",component:m}],i=n(\"ZYCi\"),d=n(\"A7o+\"),p=n(\"FVSy\"),u=n(\"SMsm\"),f=n(\"UodH\"),h=n(\"BHnd\"),x=n(\"mVsa\"),b=n(\"LC5p\"),C=n(\"La40\"),g=n(\"/dO6\"),D=n(\"4flb\"),w=n(\"V9q+\");n.d(e,\"ReportsModule\",function(){return v});var y=function(t,e,n,a){var r,l=arguments.length,o=l<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(o=(l<3?r(o):l>3?r(e,n,o):r(e,n))||o);return l>3&&o&&Object.defineProperty(e,n,o),o},v=function(){function t(){}return t=y([Object(a.L)({declarations:[m],imports:[r.b,i.g.forChild(s),d.b,p.a,u.a,f.a,h.b,x.a,b.a,D.a,C.a,g.a,w.a]})],t)}()},MzfE:function(t,e){t.exports=\"\"},gkGW:function(t,e){t.exports='<div fxLayout=\"column\">   \\r\\n   <mat-card *ngIf=\"buySellChartContent\">\\r\\n      <div fxLayout=\"row\" class=\"mb-5\" fxLayoutAlign=\"space-between center\">\\r\\n         <div class=\"dash-title\">\\r\\n            {{\\'Buy\\' | translate }} / {{ \\'Sell\\' | translate}}\\r\\n         </div>\\r\\n         <div>\\r\\n            <button mat-icon-button>\\r\\n               <mat-icon>sync</mat-icon>\\r\\n            </button>\\r\\n            <button mat-icon-button [matMenuTriggerFor]=\"options\">\\r\\n               <mat-icon>more_horiz</mat-icon>\\r\\n            </button>\\r\\n         </div>\\r\\n      </div>\\r\\n      <div class=\"card-content\">\\r\\n         <div class=\"buttongroup mt-3 mb-3 text-right\">\\r\\n            <button class=\"mb-2 mr-2\" mat-raised-button color=\"accent\" (click)=\"chartDataChange(\\'week\\')\">Week</button>\\r\\n            <button class=\"mb-2 mr-2\" mat-raised-button color=\"primary\" (click)=\"chartDataChange(\\'month\\')\">Month</button>\\r\\n            <button class=\"mb-2 mr-2\" mat-raised-button color=\"warn\" (click)=\"chartDataChange(\\'year\\')\">Year</button>\\r\\n         </div>\\r\\n         <div class=\"trade-chart-wrap\" *ngIf=\"chartData\">\\r\\n            <app-buy-sell-chart [color]=\"chartData.buySellChartColors\" [data]=\"chartData.buySellChartData\" [label]=\"chartData.buySellChartLabel\"></app-buy-sell-chart>\\r\\n         </div>\\r\\n         \\x3c!-- trade-chart-wrap--\\x3e\\r\\n      </div>\\r\\n      \\x3c!-- card-content-wrap--\\x3e\\r\\n   </mat-card>\\r\\n   \\x3c!--mat-card--\\x3e\\r\\n</div>\\r\\n<ng-container *ngIf=\"tableTabData;else empty\">\\r\\n   <mat-card class=\"p-3\">\\r\\n      <mat-tab-group class=\"table-tab-list\" color=\"accent\">\\r\\n         <mat-tab label=\"{{\\'Transaction List\\' | translate}}\">\\r\\n            <div fxFlex.gt-md=\"100\" fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\\r\\n               <div class=\"transactiion-list table-list-wrap\">\\r\\n                  <div class=\"table-responsive-x\">  \\r\\n                     <table class=\"w-100 table-scroll-wrap\" mat-table [dataSource]=\"tableTabData.transactionList\">\\r\\n                        <ng-container matColumnDef=\"transid\">\\r\\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Transaction Id</th>\\r\\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\\r\\n                              <div>{{element.transid}}</div>\\r\\n                           </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\"date\">\\r\\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Date</th>\\r\\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.date | date:\\'mediumDate\\'}} </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\"account\">\\r\\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Account</th>\\r\\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.account}}</td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\"type\">\\r\\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Type</th>\\r\\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\\r\\n                              <mat-chip-list>\\r\\n                                 <mat-chip color=\"{{element.typeColor}}\" selected>{{element.type}}</mat-chip>\\r\\n                              </mat-chip-list>\\r\\n                           </td>   \\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\"amount\">\\r\\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Amount</th>\\r\\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.amount|currency}} </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\"debit\">\\r\\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Debit</th>\\r\\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.debit|currency}} </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\"balance\">\\r\\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Balance</th>\\r\\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.balance|currency}} </td>\\r\\n                        </ng-container>\\r\\n                        <tr mat-header-row *matHeaderRowDef=\"displayedTransactionColumns\"></tr>\\r\\n                        <tr mat-row *matRowDef=\"let row; columns: displayedTransactionColumns\"></tr>\\r\\n                     </table>\\r\\n                  </div>   \\r\\n                  \\x3c!-- table responsive --\\x3e\\r\\n               </div>\\r\\n               \\x3c!-- table list wrap --\\x3e\\r\\n            </div>\\r\\n         </mat-tab>\\r\\n         <mat-tab label=\"{{\\'Transfer Report\\' | translate}}\">\\r\\n            <div fxFlex.gt-md=\"100\" fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\\r\\n               <div class=\"invoice-list table-list-wrap\">\\r\\n                  <div class=\"overflow-hidden\">\\r\\n                     <div class=\"table-responsive-x\">  \\r\\n                        <table class=\"w-100\" mat-table [dataSource]=\"tableTabData.transferreport\">\\r\\n                           <ng-container matColumnDef=\"transid\">\\r\\n                              <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Transfer Id</th>\\r\\n                              <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\\r\\n                                 <div>{{element.transid}}</div>\\r\\n                              </td>\\r\\n                           </ng-container>\\r\\n                           <ng-container matColumnDef=\"date\">\\r\\n                              <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Date</th>\\r\\n                              <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.date | date:\\'mediumDate\\'}} </td>\\r\\n                           </ng-container>\\r\\n                           <ng-container matColumnDef=\"account\">\\r\\n                              <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Account</th>\\r\\n                              \\r\\n                              <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.account}}</td>\\r\\n                           </ng-container>\\r\\n                           <ng-container matColumnDef=\"type\">\\r\\n                              <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Type</th>\\r\\n                              <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\\r\\n                                 <mat-chip-list>\\r\\n                                    <mat-chip color=\"{{element.typeColor}}\" selected>{{element.type}}</mat-chip>\\r\\n                                 </mat-chip-list>\\r\\n                              </td>\\r\\n                           </ng-container>\\r\\n                           <ng-container matColumnDef=\"amount\">\\r\\n                              <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Amount</th>\\r\\n                              <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.amount|currency}} </td>\\r\\n                           </ng-container>\\r\\n                           <ng-container matColumnDef=\"balance\">\\r\\n                              <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Balance</th>\\r\\n                              <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.balance|currency}} </td>\\r\\n                           </ng-container>\\r\\n                           <ng-container matColumnDef=\"status\">\\r\\n                              <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Status</th>\\r\\n                              <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\\r\\n                                 <mat-chip-list>\\r\\n                                    <mat-chip color=\"{{element.statusColor}}\" selected>{{element.status}}</mat-chip>\\r\\n                                 </mat-chip-list> \\r\\n                              </td>\\r\\n                           </ng-container>\\r\\n                           <tr mat-header-row *matHeaderRowDef=\"displayedTransferColumns\"></tr>\\r\\n                           <tr mat-row *matRowDef=\"let row; columns: displayedTransferColumns\"></tr>\\r\\n                        </table>\\r\\n                     </div>  \\r\\n                  </div>   \\r\\n                  \\x3c!-- table responsive--\\x3e\\r\\n               </div>\\r\\n               \\x3c!--invoice list--\\x3e\\r\\n            </div> \\r\\n         </mat-tab>\\r\\n         <mat-tab label=\"{{\\'Expense Category\\' | translate}}\">\\r\\n            <div fxFlex.gt-md=\"100\" fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\\r\\n               <div class=\"Expense-category-list table-list-wrap\">\\r\\n                  <div class=\"table-responsive-x\">  \\r\\n                     <table class=\"w-100\" mat-table [dataSource]=\"tableTabData.expenseCategory\">\\r\\n                        <ng-container matColumnDef=\"itmNo\">\\r\\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Item No</th>\\r\\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\\r\\n                              <div>{{element.itmNo}}</div>\\r\\n                           </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\"date\">\\r\\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Date</th>\\r\\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.date | date:\\'mediumDate\\'}} </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\"type\">\\r\\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Type</th>\\r\\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\\r\\n                              <mat-chip-list>\\r\\n                                 <mat-chip color=\"{{element.typeColor}}\" selected>{{element.type}}</mat-chip>\\r\\n                              </mat-chip-list> \\r\\n                           </td>   \\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\"companyName\">\\r\\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Company Name</th>\\r\\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.companyName}} </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\"amount\">\\r\\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Amount</th>\\r\\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.amount|currency}} </td>\\r\\n                        </ng-container>\\r\\n                        <ng-container matColumnDef=\"status\">\\r\\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Status</th>\\r\\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\\r\\n                              <mat-chip-list>\\r\\n                                 <mat-chip color=\"{{element.statusColor}}\" selected>{{element.status}}</mat-chip>\\r\\n                              </mat-chip-list> \\r\\n                           </td>\\r\\n                        </ng-container>\\r\\n                        <tr mat-header-row *matHeaderRowDef=\"displayedExpenseColumns\"></tr>\\r\\n                        <tr mat-row *matRowDef=\"let row; columns: displayedExpenseColumns\"></tr>\\r\\n                     </table>\\r\\n                  </div>  \\r\\n                  \\x3c!-- table responsive --\\x3e\\r\\n               </div>\\r\\n               \\x3c!-- Expense-category-list--\\x3e\\r\\n            </div>   \\r\\n         </mat-tab>\\r\\n      </mat-tab-group>\\r\\n      \\x3c!--mat-tab-group--\\x3e\\r\\n   </mat-card>\\r\\n</ng-container> \\r\\n<ng-template #empty>\\r\\n   <h5 class=\"ml-5\">No data found</h5>\\r\\n</ng-template>\\r\\n<mat-menu #options=\"matMenu\" x-position=\"before\">\\r\\n   <button mat-menu-item>\\r\\n      <mat-icon>settings</mat-icon> Settings </button>\\r\\n   <button mat-menu-item>\\r\\n      <mat-icon>more</mat-icon> View More </button>\\r\\n   <button mat-menu-item>\\r\\n      <mat-icon>notifications_off</mat-icon> Disable notifications </button>\\r\\n   <button mat-menu-item>\\r\\n      <mat-icon>exit_to_app</mat-icon> Remove Panel </button>\\r\\n</mat-menu>'}}]);","extractedComments":[]}