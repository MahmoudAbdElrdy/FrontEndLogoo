{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{\"+Tk3\":function(e,t){e.exports='<mat-card>\\r\\n   <button color=\"primary\" mat-raised-button (click)=\"addNewUserDialog()\">\\r\\n      Add Users\\r\\n   </button>\\r\\n   <ng-container *ngIf=\"collaborationData && collaborationData.length>0; else elseBlock\">\\r\\n      <div class=\"table-responsive-x\">\\r\\n         <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 w-100 table-scroll-wrap\">\\r\\n            <ng-container matColumnDef=\"image\">\\r\\n               <th class=\"px-3\" mat-header-cell *matHeaderCellDef>Image</th>\\r\\n               <td class=\"px-3\" mat-cell *matCellDef=\"let element\"> <img src= {{element.image}} width=\"40\" height=\"40\"></td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\"name\">\\r\\n               <th class=\"px-3\" mat-header-cell *matHeaderCellDef> Name </th>\\r\\n               <td class=\"px-3\" mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\"email\">\\r\\n               <th class=\"px-3\" mat-header-cell *matHeaderCellDef> email </th>\\r\\n               <td class=\"px-3\" mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\"access\">\\r\\n               <th class=\"px-3\" mat-header-cell *matHeaderCellDef> Access </th>\\r\\n               <td class=\"px-3\" mat-cell *matCellDef=\"let element\"> {{element.access}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\"action\">\\r\\n               <th class=\"px-3\" mat-header-cell *matHeaderCellDef> Action </th>\\r\\n               <td class=\"px-3\" mat-cell *matCellDef=\"let element;let i = index;\">\\r\\n                  <button color=\"warn\" mat-icon-button (click)=\"onDelete(i)\">\\r\\n                     <mat-icon class=\"\">delete</mat-icon>\\r\\n                  </button>\\r\\n               </td>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\\r\\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\\r\\n         </table>\\r\\n      </div>  \\r\\n      \\x3c!-- table-responsive-x --\\x3e\\r\\n   </ng-container>\\r\\n   <ng-template #elseBlock>\\r\\n      <h5 class=\"ml-5\">No user found</h5>\\r\\n   </ng-template>\\r\\n</mat-card>'},\"/STp\":function(e,t){e.exports='<div class=\"inner-container\">\\r\\n   <div class=\"final-receipt-page section-gap\">\\r\\n      <div class=\"account-info\">\\r\\n         <div class=\"container\">\\r\\n            <div class=\"mb-4 user-info\">\\r\\n               <div fxLayoutAlign=\"flex-start\">\\r\\n                  <div class=\"login-user-img\">\\r\\n                     <img src=\"assets/images/user-4.jpg\" width=\"70\" alt=\"Active User\">\\r\\n                  </div>\\r\\n                  \\x3c!-- login-user-img --\\x3e\\r\\n                  <div class=\"px-3\">\\r\\n                     <h4>Hi, John Doe</h4>\\r\\n                     <div class=\"text-muted text-xl\">johndoe@deo.com</div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div fxLayout=\"row wrap\" class=\"col-gap\">\\r\\n               <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"30\" fxFlex.lg=\"20\" fxFlex.xl=\"20\" class=\"user-nav-list bg-white\">\\r\\n                  <mat-list class=\"py-2\" role=\"list\">\\r\\n                     <mat-list-item role=\"listitem\"> \\r\\n                        <a [routerLink]=\"[\\'/admin-panel/account/profile\\']\" routerLinkActive=\"tab-active\">\\r\\n                           <span>\\r\\n                              <i class=\"material-icons\">account_circle</i> Profile\\r\\n                           </span> \\r\\n                        </a>\\r\\n                     </mat-list-item>\\r\\n                     <mat-list-item role=\"listitem\">\\r\\n                        <a [routerLink]=\"[\\'/admin-panel/account/collaboration\\']\" routerLinkActive=\"tab-active\">\\r\\n                           <i class=\"material-icons\">location_on</i>\\r\\n                           <span>Collaboration</span>\\r\\n                        </a>\\r\\n                     </mat-list-item>\\r\\n                     <mat-list-item role=\"listitem\"> \\r\\n                        <a [routerLink]=\"[\\'/admin-panel/account/settings\\']\" routerLinkActive=\"tab-active\">\\r\\n                           <i class=\"material-icons\">credit_card</i> \\r\\n                           <span>Account Settings</span> \\r\\n                        </a>\\r\\n                     </mat-list-item>\\r\\n                  </mat-list>   \\r\\n               </div>\\r\\n               <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"70\" fxFlex.lg=\"80\" fxFlex.xl=\"80\" class=\"user-content-wrapper my-0\">\\r\\n                  <div class=\"tab-container\">\\r\\n                    <router-outlet></router-outlet>\\r\\n                  </div>\\r\\n                  \\x3c!-- tab-container --\\x3e\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n      \\x3c!-- account-info --\\x3e\\r\\n   </div>\\r\\n   \\x3c!-- final-receipt-page --\\x3e\\r\\n</div>\\r\\n\\x3c!-- inner-container --\\x3e'},\"14kb\":function(e,t){e.exports='<mat-card *ngIf=\"type == \\'info\\'\">\\r\\n   <h4> Edit Profile Information</h4>\\r\\n   <div fxLayout=\"row wrap\" class=\"col-gap\">\\r\\n      <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"50\" fxFlex.lg=\"50\" fxFlex.xl=\"50\">\\r\\n         <form [formGroup] = \"info\">\\r\\n            <div class=\"example-container\">\\r\\n               <mat-form-field class=\"w-100 mb-3\">\\r\\n                  <input matInput placeholder=\"First Name\" formControlName=\"first_name\">\\r\\n                  <mat-error *ngIf=\"info.get(\\'first_name\\').hasError(\\'required\\') && info.get(\\'first_name\\').touched\">This field should not be empty.</mat-error>\\r\\n               </mat-form-field>\\r\\n               <mat-form-field class=\"w-100 mb-3\">\\r\\n                  <input matInput placeholder=\"Last Name\" formControlName=\"last_name\">\\r\\n                  <mat-error *ngIf=\"info.get(\\'last_name\\').hasError(\\'required\\') && info.get(\\'last_name\\').touched\">This field should not be empty.</mat-error>\\r\\n               </mat-form-field>\\r\\n               <div class=\"mb-3\">\\r\\n                  <mat-radio-group formControlName=\"gender\">\\r\\n                     <mat-radio-button class=\"mr-2\" value=\"male\">Male</mat-radio-button>\\r\\n                     <mat-radio-button value=\"female\">Female</mat-radio-button>\\r\\n                  </mat-radio-group>\\r\\n               </div>\\r\\n               <div>\\r\\n                  <mat-form-field class=\"w-100 mb-3\">\\r\\n                     <input matInput [matDatepicker]=\"picker\" placeholder=\"Bith Date\" formControlName=\"date\">\\r\\n                     <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\\r\\n                     <mat-datepicker #picker></mat-datepicker>\\r\\n                     <mat-error *ngIf=\"info.get(\\'date\\').hasError(\\'required\\') && info.get(\\'date\\').touched\">This field should not be empty.</mat-error>\\r\\n                  </mat-form-field>\\r\\n               </div>\\r\\n               <mat-form-field class=\"w-100 mb-3\">\\r\\n                  <input matInput placeholder=\"Mobile No.\" formControlName=\"phone_number\">\\r\\n                  <mat-error *ngIf=\"info.get(\\'phone_number\\').hasError(\\'required\\') && info.get(\\'phone_number\\').touched\">This field should not be empty.</mat-error>\\r\\n               </mat-form-field>\\r\\n               <mat-form-field class=\"w-100 mb-3\">\\r\\n                  <input matInput placeholder=\"Location\" formControlName=\"location\">\\r\\n                  <mat-error *ngIf=\"info.get(\\'location\\').hasError(\\'required\\') && info.get(\\'location\\').touched\">This field should not be empty.</mat-error>\\r\\n               </mat-form-field>\\r\\n               <mat-form-field class=\"w-100 mb-3\">\\r\\n                  <input matInput type=\"email\" placeholder=\"Email\" formControlName=\"email\">\\r\\n                  <mat-error *ngIf=\"info.get(\\'email\\').hasError(\\'required\\') && info.get(\\'email\\').touched\">This field should not be empty.</mat-error>\\r\\n                  <mat-error *ngIf=\"info.get(\\'email\\').hasError(\\'pattern\\') && info.get(\\'email\\').touched\">Please enter a valid email.</mat-error>\\r\\n               </mat-form-field>\\r\\n               <button mat-raised-button color=\"accent\" (click)=\"submitProfileInfo()\">Save</button>\\r\\n            </div>\\r\\n           \\x3c!-- example-container --\\x3e\\r\\n         </form>\\r\\n      </div>\\r\\n      <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"50\" fxFlex.lg=\"50\" fxFlex.xl=\"50\" class=\"edit-profile\" style=\"background-image: url(assets/images/user-edit.png)\">\\r\\n      </div>\\r\\n   </div>\\r\\n</mat-card>'},\"2BPy\":function(e,t){e.exports=\"\"},\"6hBy\":function(e,t){e.exports=\"\"},aPPG:function(e,t){e.exports=\"\"},eG72:function(e,t){e.exports='<mat-card>\\r\\n   <div>\\r\\n      <div fxLayoutAlign=\"flex-start\">\\r\\n         <div class=\"product-image-gallery-item edit-icon mb-4\">\\r\\n            <a>\\r\\n               <img src=\"assets/images/user-edit.png\" alt=\"\" width=\"70\" alt=\"Active User\">\\r\\n            </a>\\r\\n            <button class=\"edit-btn\" md-mini-fab type=\"button\">\\r\\n               <label for=\"fileToUpload\">\\r\\n                  <mat-icon>edit</mat-icon>\\r\\n               </label>\\r\\n            </button>\\r\\n            <input mat id=\"fileToUpload\" type=\"file\" accept=\"image/*\" style=\"display:none;\">\\r\\n         </div>\\r\\n         \\x3c!-- product-image-gallery-item --\\x3e\\r\\n      </div>\\r\\n   </div>\\r\\n   <div class=\"notifications-wrap\">\\r\\n      <h5>Notifications</h5>\\r\\n      <section class=\"checkbox-wrap mb-4\">\\r\\n         <mat-checkbox class=\"mb-2 d-block\">Enable Notifications</mat-checkbox>\\r\\n         <mat-checkbox class=\"mb-2 d-block\">Show Desktop Notifications</mat-checkbox>\\r\\n         <mat-checkbox class=\"mb-2 d-block\">Get e-mail notification for my own activity</mat-checkbox>\\r\\n         <mat-checkbox class=\"mb-2 d-block\">Get e-mail notification for request and reviews</mat-checkbox>\\r\\n      </section>\\r\\n   </div>\\r\\n   \\x3c!-- notifications-wrap --\\x3e\\r\\n   <div class=\"deactivate-wrap\">\\r\\n      <div class=\"reason-sec\">\\r\\n         <div class=\"sec-title\">\\r\\n            <h5>Deactivate your account</h5>\\r\\n         </div>\\r\\n         <div>\\r\\n            <p>Reason for leaving :</p>\\r\\n            <mat-radio-group class=\"d-block\">\\r\\n               <mat-radio-button class=\"d-block mb-2\" *ngFor=\"let reason of reasons\" [value]=\"reason\">\\r\\n                  {{reason}}\\r\\n               </mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n         </div>              \\r\\n         <div class=\"reason-wrap\">\\r\\n            <label>If other then please explain further : </label>\\r\\n            <mat-form-field>\\r\\n               <textarea matInput></textarea>\\r\\n            </mat-form-field>\\r\\n         </div>\\r\\n      </div>\\r\\n      \\x3c!-- reason-sec--\\x3e\\r\\n   </div> \\r\\n   \\x3c!-- deactivate-wrap--\\x3e\\r\\n   <button color=\"warn\" mat-raised-button (click)=\"onDelete()\">\\r\\n      Deactivate Account\\r\\n   </button>\\r\\n</mat-card>'},k1Wy:function(e,t){e.exports=\"\"},kaBM:function(e,t,n){\"use strict\";n.r(t);var r=n(\"CcnG\"),a=n(\"Ip0R\"),o=n(\"gIcY\"),i=n(\"ZYCi\"),l=n(\"0/Q6\"),c=n(\"UodH\"),s=n(\"SMsm\"),m=n(\"FVSy\"),f=n(\"b716\"),d=n(\"jQLj\"),p=n(\"seP3\"),u=n(\"9It4\"),b=n(\"uGex\"),h=n(\"BHnd\"),g=n(\"de3e\"),v=n(\"V9q+\"),x=function(e,t,n,r){var a,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var l=e.length-1;l>=0;l--)(a=e[l])&&(i=(o<3?a(i):o>3?a(t,n,i):a(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},y=function(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)},w=function(){function e(){}return e.prototype.ngOnInit=function(){},e=x([Object(r.n)({selector:\"app-Account\",template:n(\"/STp\"),styles:[n(\"aPPG\")]}),y(\"design:paramtypes\",[])],e)}(),k=n(\"kWnn\"),D=function(e,t,n,r){var a,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var l=e.length-1;l>=0;l--)(a=e[l])&&(i=(o<3?a(i):o>3?a(t,n,i):a(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},R=function(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)},j=function(){function e(e){this.service=e,this.selected=\"1 month\",this.reasons=[\"This is temporary. I'll be back.\",\"My account was hacked.\",\"I have a privacy concern.\",\"Other\"],this.howLongDeactivate=[\"1 week\",\"1 month\",\"6 months\",\"1 year\"]}return e.prototype.ngOnInit=function(){},e.prototype.onDelete=function(){var e=this;this.service.deleteDialog(\"Are you sure you want to delete this account permanently?\").subscribe(function(t){e.popUpDeleteUserResponse=t},function(e){return console.log(e)},function(){return e.popUpDeleteUserResponse})},e.ctorParameters=function(){return[{type:k.a}]},e=D([Object(r.n)({selector:\"app-account-setting\",template:n(\"eG72\"),styles:[n(\"2BPy\")]}),R(\"design:paramtypes\",[k.a])],e)}(),C=function(e,t,n,r){var a,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var l=e.length-1;l>=0;l--)(a=e[l])&&(i=(o<3?a(i):o>3?a(t,n,i):a(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},P=function(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)},I=function(){function e(e){this.service=e,this.displayedColumns=[\"image\",\"name\",\"email\",\"access\",\"action\"],this.dataSource=new h.a(this.collaborationData)}return e.prototype.ngOnInit=function(){var e=this;this.service.getCollaborationContent().valueChanges().subscribe(function(t){return e.getCollaborationData(t)})},e.prototype.getCollaborationData=function(e){this.collaborationData=e,this.dataSource=new h.a(this.collaborationData)},e.prototype.onDelete=function(e){var t=this;this.service.deleteDialog(\"Are you sure you want to delete this user permanently?\").subscribe(function(e){t.popUpDeleteUserResponse=e},function(e){return console.log(e)},function(){return t.getDeleteResponse(t.popUpDeleteUserResponse,e)})},e.prototype.getDeleteResponse=function(e,t){\"yes\"==e&&(this.dataSource.data.splice(t,1),this.dataSource=new h.a(this.dataSource.data))},e.prototype.addNewUserDialog=function(){var e=this;this.service.addNewUserDialog().subscribe(function(t){e.popUpNewUserResponse=t},function(e){return console.log(e)},function(){return e.getAddUserPopupResponse(e.popUpNewUserResponse)})},e.prototype.getAddUserPopupResponse=function(e){if(e){var t={image:\"assets/images/user-edit.png\",name:e.name,email:e.email,access:e.accessType};this.collaborationData.push(t),this.dataSource=new h.a(this.collaborationData)}},e.ctorParameters=function(){return[{type:k.a}]},e=C([Object(r.n)({selector:\"app-collaboration\",template:n(\"+Tk3\"),styles:[n(\"6hBy\")]}),P(\"design:paramtypes\",[k.a])],e)}(),O=n(\"7vAU\"),F=function(e,t,n,r){var a,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var l=e.length-1;l>=0;l--)(a=e[l])&&(i=(o<3?a(i):o>3?a(t,n,i):a(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},N=function(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)},U=function(){function e(e,t,n,r){var a=this;this.route=e,this.router=t,this.formGroup=n,this.toastyService=r,this.emailPattern=/\\S+@\\S+\\.\\S+/,this.toastOption={title:\"Account Information\",msg:\"Your account information updated successfully!\",showClose:!0,timeout:3e3,theme:\"material\"},this.route.params.subscribe(function(e){a.route.queryParams.forEach(function(e){a.type=e.type})})}return e.prototype.ngOnInit=function(){this.info=this.formGroup.group({first_name:[\"\",[o.j.required]],last_name:[\"\",[o.j.required]],gender:[\"male\"],date:[],phone_number:[\"\",[o.j.required]],location:[\"\"],email:[\"\",[o.j.required,o.j.pattern(this.emailPattern)]]})},e.prototype.submitProfileInfo=function(){var e=this;if(this.info.valid)this.router.navigate([\"/admin-panel/account/profile\"]).then(function(){e.toastyService.success(e.toastOption)});else for(var t in this.info.controls)this.info.controls[t].markAsTouched()},e.ctorParameters=function(){return[{type:i.a},{type:i.f},{type:o.b},{type:O.c}]},e=F([Object(r.n)({selector:\"app-EditProfile\",template:n(\"14kb\"),styles:[n(\"kj+5\")]}),N(\"design:paramtypes\",[i.a,i.f,o.b,O.c])],e)}(),A=function(e,t,n,r){var a,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var l=e.length-1;l>=0;l--)(a=e[l])&&(i=(o<3?a(i):o>3?a(t,n,i):a(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},S=function(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)},L=function(){function e(){}return e.prototype.ngOnInit=function(){},e=A([Object(r.n)({selector:\"app-profile\",template:n(\"zk+a\"),styles:[n(\"k1Wy\")]}),S(\"design:paramtypes\",[])],e)}(),T=[{path:\"\",component:w,children:[{path:\"profile\",component:L},{path:\"settings\",component:j},{path:\"collaboration\",component:I},{path:\"profile/edit\",component:U}]}];n.d(t,\"AdminAccountModule\",function(){return q});var _=function(e,t,n,r){var a,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var l=e.length-1;l>=0;l--)(a=e[l])&&(i=(o<3?a(i):o>3?a(t,n,i):a(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i},q=function(){function e(){}return e=_([Object(r.L)({declarations:[L,w,j,I,U],imports:[a.b,i.g.forChild(T),l.a,c.a,s.a,m.a,f.b,d.a,p.c,u.a,b.a,o.d,o.i,h.b,v.a,g.a]})],e)}()},\"kj+5\":function(e,t){e.exports=\"\"},\"zk+a\":function(e,t){e.exports='<mat-card>\\r\\n   <h4>Profile Information</h4>\\r\\n   <div class=\"pt-3\">\\r\\n      <div class=\"proflie-field mb-3\">\\r\\n         <label>First Name:</label>\\r\\n         <span>John</span>\\r\\n      </div>\\r\\n      <div class=\"proflie-field mb-3\">\\r\\n         <label>Last Name:</label>\\r\\n         <span>Doe</span>\\r\\n      </div>\\r\\n      <div class=\"proflie-field mb-3\">\\r\\n         <label>Gender:</label>\\r\\n         <span>Male</span>\\r\\n      </div>\\r\\n      <div class=\"proflie-field mb-3\">\\r\\n         <label>Date of birth:</label>\\r\\n         <span>Jan,06,1979</span>\\r\\n      </div>\\r\\n      <div class=\"proflie-field mb-3\">\\r\\n         <label>Mobile Number:</label>\\r\\n         <span>+120 256 254 125</span>\\r\\n      </div>\\r\\n      <div class=\"proflie-field mb-3\">\\r\\n         <label>location:</label>\\r\\n         <span>New York</span>\\r\\n      </div>\\r\\n      <div class=\"proflie-field mb-3\">\\r\\n         <label>E-mail id:</label>\\r\\n         <span class=\"text-ellipse\">johnDoe@doe.com</span>\\r\\n      </div>\\r\\n      <button mat-raised-button color=\"accent\" [routerLink]=\"[\\'edit\\']\" [queryParams]=\"{type:\\'info\\'}\">Edit</button>\\r\\n   </div>\\r\\n</mat-card>\\r\\n'}}]);","extractedComments":[]}